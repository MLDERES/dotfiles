# Configure terminal environment.
set -sg default-terminal "screen-256color"
set -asg terminal-overrides "xterm*:Tc,smcup@:rmcup@,screen-256color:Tc"
setw -g xterm-keys on

# Snappy keyboard.
set -sg escape-time 0

# Set scrollback history to 10000 (10k).
set -sg history-limit 10000
set -sg history-file "~/.tmux_history"
set -sg display-time 2500

# Set window and pane index to 1 (0 by default).
set -g base-index 1
setw -g pane-base-index 1

# Capture focus events.
set -sg focus-events on

# Renumber windows sequentially after closing any of them.
set -g renumber-windows on

# Always resize windows to match the active parent window.
setw -g aggressive-resize on

# Visual activity feedback.
setw -g monitor-activity on
set -g visual-activity off

# Customize window titles.
set -g set-titles on
set -g set-titles-string "#W"
setw -g allow-rename on
setw -g automatic-rename on
setw -g automatic-rename-format "#T"

# Customize the status bar.
set -g status on
set -g status-interval 10
set -g status-keys vi
set -g status-position top
set -g status-justify left
set -g status-style "bg=white,fg=black"
set -g status-left ""
set -g status-left-length 0
set -g status-right " #{client_width}x#{client_height} "
set -g status-right-length 11

# Customize the window status tabs.
setw -g window-status-activity-style "bold"
setw -g window-status-bell-style "bg=red,fg=white,bold"
setw -g window-status-current-format " #{=24:window_name} -- #I "
setw -g window-status-current-style "bg=black,fg=white"
setw -g window-status-format " #{=24:window_name} -- #I "
setw -g window-status-separator ""
setw -g window-status-style "bg=white,fg=black"

# Set ` (tic) as the default prefix key combination and unbind C-b to free it up.
unbind C-b
set -g prefix `

# Use send-prefix to pass ` through to application.
bind ` send-prefix

# Some quick binds.
bind -T root C-Space command-prompt
bind -T root M-d detach-client

# Reload ~/.tmux.conf using PREFIX r.
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Tab navigation.
bind -T root C-n new-window
bind -T root C-w kill-window
bind -T root C-Tab next-window
bind -T root C-S-Tab previous-window

# Cursor navigation.
bind -T root C-Up copy-mode -e \; send-keys -X scroll-up
bind -T root C-PageUp copy-mode -e \; send-keys -X page-up
bind -T copy-mode C-Home send-keys -X history-top
bind -T copy-mode C-End send-keys -X history-bottom
bind -T copy-mode Home send-keys -X  start-of-line
bind -T copy-mode End send-keys -X end-of-line
bind -T copy-mode Escape send-keys -X cancel
bind -T copy-mode C-Left send-keys -X previous-word
bind -T copy-mode C-Right send-keys -X next-word-end
bind -T copy-mode Space send-keys -X rectangle-toggle
bind -T copy-mode PageUp send-keys -X page-up
bind -T copy-mode PageDown send-keys -X page-down

# Clipboard bindings.
%if #{==:#(uname),Darwin}
    bind -T copy-mode C-c send-keys -X copy-pipe-and-cancel "pbcopy"
    bind -T root C-v if "[ '#{pane_current_command}' = vim ]" "send-keys C-v" "run 'pbpaste > /tmp/clip'; loadb /tmp/clip; pasteb -d"
%endif
%if #{!=:#(uname),Darwin}
    bind -T copy-mode C-c send-keys -X copy-pipe-and-cancel "xsel -bi"
    bind -T root C-v if "[ '#{pane_current_command}' = vim ]" "send-keys C-v" "run 'xsel -bo > /tmp/clip'; loadb /tmp/clip; pasteb -d"
%endif

# Use PREFIX h to split window horizontally and PREFIX v to split vertically.
bind h split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"
unbind %

# Set mouse behavior.
setw -g mouse on
bind -T root WheelUpPane if -F -t = "#{mouse_any_flag}" "send-keys -M" "select-pane -t =; if -F -t = \"#{alternate_on}\" \"send-keys Up Up Up\" \"copy-mode -e; send-keys -M\""
bind -T root WheelDownPane if -F -t = "#{mouse_any_flag}" "send-keys -M" "select-pane -t =; if -F -t = \"#{alternate_on}\" \"send-keys Down Down Down\" \"copy-mode -e; send-keys -M\""
bind -T copy-mode WheelUpPane send-keys -X -N3 scroll-up
bind -T copy-mode WheelDownPane send-keys -X -N3 scroll-down
bind -T copy-mode MouseDown1Pane send-keys -X clear-selection
unbind -T copy-mode MouseDragEnd1Pane
